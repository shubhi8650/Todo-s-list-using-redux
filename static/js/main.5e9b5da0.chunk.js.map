{"version":3,"sources":["components/Todo.js","actions/Index.js","App.js","Reducers/TodoReducers.js","Reducers/Index.js","Store.js","index.js"],"names":["Todo","useState","input","setInput","list","useSelector","state","TodoReducers","display","setDisplay","dispatch","useDispatch","className","type","value","onChange","e","target","onClick","data","payload","id","Date","getTime","toString","map","elem","style","App","initialState","action","newList","filter","rootReducer","combineReducers","Store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"2LAyCeA,MAhCf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAOC,aAAY,SAACC,GAAD,OAASA,EAAMC,aAAaH,QACrD,EAA+BH,mBAAS,QAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAEjB,OACI,sBAAKC,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,6CACA,uBAAOC,KAAK,OAAOC,MAAOZ,EAAOa,SAAU,SAACC,GAAD,OAAKb,EAASa,EAAEC,OAAOH,UAClE,wBAAQI,QAAS,kBAAIR,GClBbS,EDkB8BjB,ECjB5C,CACFW,KAAM,WACNO,QAAS,CACLC,IAAI,IAAIC,MAAOC,UAAUC,WACzBL,KAAMA,KDa4ChB,EAAS,IAAIM,EAAW,UClB/D,IAACU,GDkBR,kBAEJ,qBAAKP,UAAU,YAAf,SAEQR,EAAKqB,KAAI,SAACC,GAAD,OACL,sBAAKd,UAAU,YAAf,UACI,6BAAKc,EAAKP,OACV,wBAAQD,QAAS,kBAAIR,ECdvC,CACFG,KAAM,cACNO,QAAQ,CACJC,GDWyDK,EAAKL,OAA9C,iBAF4BK,EAAKL,SAQjD,qBAAKT,UAAU,cAAf,SACI,wBAAQe,MAAO,CAACnB,QAASA,GACxBU,QAAU,kBAAIR,ECZrB,CACFG,KAAM,cDWuCJ,EAAW,UADhD,8BEnBCmB,MARf,WACI,OACI,8BACE,cAAC,EAAD,O,eCRNC,EAAa,CACfzB,KAAM,IAsCKG,EAnCM,WAA+B,IAA9BD,EAA6B,uDAAvBuB,EAAcC,EAAS,uCAC/C,OAAOA,EAAOjB,MAEV,IAAK,WAED,MAAmBiB,EAAOV,QAAnBC,EAAP,EAAOA,GAAIF,EAAX,EAAWA,KAEX,MAAO,CAEHf,KAAK,GAAD,mBACGE,EAAMF,MADT,CAEA,CACIiB,GAAGA,EACHF,KAAKA,MAKrB,IAAK,cAED,IAAMY,EAAUzB,EAAMF,KAAK4B,QAAO,SAACN,GAAD,OAAQA,EAAKL,KAAOS,EAAOV,QAAQC,MACrE,MAAM,CAEFjB,KAAM2B,GAGd,IAAK,aACD,MAAM,CACF3B,KAAM,IAEd,QACI,OAAOE,IC5BJ2B,EAJKC,YAAgB,CAChC3B,iBCGW4B,EAFDC,YAAYH,EAAaI,OAAOC,8BAAgCD,OAAOC,gCCCrFC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAON,EAAjB,SACE,cAAC,EAAD,MAGFO,SAASC,eAAe,W","file":"static/js/main.5e9b5da0.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react'\r\nimport {addTodo , deleteTodo, removeAll} from '../actions/Index'\r\nimport {useSelector, useDispatch } from 'react-redux'\r\nimport '../components/Todo.css'\r\n\r\n\r\n\r\nfunction Todo() {\r\n    const [input, setInput] = useState('')\r\n    const list = useSelector((state)=>state.TodoReducers.list)\r\n    const [display , setDisplay] = useState(\"none\")\r\n    const dispatch = useDispatch()\r\n   \r\n    return (\r\n        <div className=\"main-container\">\r\n            <div className=\"todo-container\">\r\n                <h1>Todo's List</h1>\r\n                <input type=\"text\" value={input} onChange={(e)=>setInput(e.target.value)}/>\r\n                <button onClick={()=>dispatch(addTodo(input), setInput(\"\"),setDisplay(\"block\"))}>+</button>\r\n            </div>\r\n            <div className=\"show-data\">\r\n                {\r\n                    list.map((elem)=>(\r\n                        <div className=\"each-data\" key={elem.id}>\r\n                            <h4>{elem.data}</h4>\r\n                            <button onClick={()=>dispatch(deleteTodo(elem.id))}>x</button>\r\n                        </div>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"remove-data\">\r\n                <button style={{display: display}}\r\n                 onClick ={()=>dispatch(removeAll(), setDisplay(\"none\"))}>Remove All</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","\r\n\r\nexport const addTodo = (data) =>{\r\n    return{\r\n        type: \"ADD_TODO\",\r\n        payload: {\r\n            id: new Date().getTime().toString(),\r\n            data: data\r\n        }\r\n    \r\n    }\r\n}\r\nexport const deleteTodo = (id) =>{\r\n    return{\r\n        type: \"DELETE_TODO\",\r\n        payload:{\r\n            id: id\r\n        }\r\n    \r\n    }\r\n}\r\n\r\nexport const removeAll=()=>{\r\n    return{\r\n        type: \"REMOVE_ALL\"\r\n    }\r\n}","  \r\n\r\n\r\n  \r\nimport React from 'react'\r\nimport Todo from './components/Todo'\r\n  \r\n  function App() {\r\n      return (\r\n          <div>\r\n            <Todo/>\r\n          </div>\r\n      )\r\n  }\r\n  \r\n  export default App\r\n  ","\r\n\r\nconst initialState={\r\n    list: []\r\n}\r\n\r\nconst TodoReducers = (state=initialState, action)=>{\r\n    switch(action.type){\r\n\r\n        case \"ADD_TODO\":\r\n\r\n            const {id, data} = action.payload;\r\n\r\n            return {\r\n                // ...state,\r\n                list: [\r\n                    ...state.list,\r\n                    {\r\n                        id:id,\r\n                        data:data\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case \"DELETE_TODO\":\r\n            \r\n            const newList = state.list.filter((elem)=>elem.id !== action.payload.id)\r\n            return{\r\n                // ...state,\r\n                list: newList\r\n            } \r\n        \r\n        case 'REMOVE_ALL':\r\n            return{\r\n                list: []\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default TodoReducers;","\r\n\r\nimport TodoReducers from \"./TodoReducers\";\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    TodoReducers\r\n})\r\n\r\nexport default rootReducer;","\r\n\r\n\r\nimport {createStore} from 'redux';\r\nimport rootReducer from './Reducers/Index';\r\n\r\n\r\nconst Store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\n\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>  \n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}